# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  windows-wheel:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Publish package
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
        python -m build
        pip install twine
        twine upload --skip-existing -u __token__ -p "${{ secrets.PYPI_API_TOKEN }}" dist/*

  osx_13_x86:

    runs-on: macos_x86_wheel

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Publish package
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
        python -m build
        pip install twine
        twine upload --skip-existing -u __token__ -p "${{ secrets.PYPI_API_TOKEN }}" dist/*

  manylinux-wheel:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build Manylinux wheel
      run: |
        docker build -t cargodock ./manylinux
        docker run --rm -v ${PWD}:/io cargodock bash /io/manylinux/build_wheel.sh
        pip install twine
        twine upload --skip-existing -u __token__ -p "${{ secrets.PYPI_API_TOKEN }}" dist/*


  macos-wheel-m1:

    runs-on: flyci-macos-14-m1

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install latests rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
        override: true

    - name: Install Unix ODBC
      run: |
        brew install unixodbc
        sudo ln -s /opt/homebrew/lib ~/lib

    - name: Publish package
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
        python -m build
        pip install twine
        twine upload --skip-existing -u __token__ -p "${{ secrets.PYPI_API_TOKEN }}" dist/*
